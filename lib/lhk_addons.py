#! python

def lua_header():
    head =  "clear()\n"
    head += "lmc_device_set_name('base_keyboard', 'VID_046D')\n"
    head += "lmc_device_set_name('fantech_numeric', 'VID_1C4F')\n"
    head += "lmc_print_devices()\n"
    head += "\n"
    head += " -- ^ = Control\n"
    head += " -- % = Alt\n"
    head += " -- + = Shift\n"
    head += " -- # = Win\n"
    head += " -- & = Tab\n"
    head += "\n"
    head += "local under = '0'\n"
    head += "local layout = 1\n"
    head += "\n"
    head += "lmc_set_handler('fantech_numeric', function(button, direction)\n"
    head += "  --print('button '..button.. ' in direction '..direction)\n"
    head += "\n"
    head += "\n"
    head += "  local code = {\n"
    head += "    --[32]  = 'A',\n"
    head += "    --[110] = 'B',\n"
    head += "    --[13]  = 'C',\n"
    head += "\n"
    head += "    [96]  = '0',\n"
    head += "    [97]  = '1',\n"
    head += "    [98]  = '2',\n"
    head += "    [99]  = '3',\n"
    head += "    [100] = '4',\n"
    head += "    [101] = '5',\n"
    head += "    [102] = '6',\n"
    head += "    [103] = '7',\n"
    head += "    [104] = '8',\n"
    head += "    [105] = '9',\n"
    head += "\n"
    head += "    [109] = 'minus',\n"
    head += "    [107] = 'plus',\n"
    head += "    [9]   = 'tab',\n"
    head += "\n"
    head += "    [111] = 'X',\n"
    head += "    [106] = 'Y',\n"
    head += "    [8]   = 'Z',\n"
    head += "\n"
    head += "    [45]  = '0nl',\n"
    head += "    [35]  = '1nl',\n"
    head += "    [40]  = '2nl',\n"
    head += "    [34]  = '3nl',\n"
    head += "    [37]  = '4nl',\n"
    head += "    [12]  = '5nl',\n"
    head += "    [39]  = '6nl',\n"
    head += "    [36]  = '7nl',\n"
    head += "    [38]  = '8nl',\n"
    head += "    [33]  = '9nl'\n"
    head += "  }\n"
    head += "\n"
    head += "\n"
    head += "\n"
    head += "  local layouts = {\n"
    return head

def lua_footer(layout_max):
    foot =  "  }\n"
    foot += "\n"
    foot += "  if direction == 1 and button == 9 then\n"
    foot += "\n"
    foot += "    layout = layout + 1\n"
    foot += "\n"
    foot += "    if layout == "+ str( layout_max + 1 ) +" then\n"
    foot += "      layout = 1\n"
    foot += "    end\n"
    foot += "  end\n"
    foot += "\n"
    foot += "\n"
    foot += "\n"
    foot += "  if direction == 1 and under ~= '0' then\n"
    foot += "\n"
    foot += "    if button == 32 or button == 110 or button == 13 then\n"
    foot += "\n"
    foot += "      print('Under reset')\n"
    foot += "      under = '0'\n"
    foot += "\n"
    foot += "    end\n"
    foot += "\n"
    foot += "  elseif direction == 1 and button == 32 then\n"
    foot += "\n"
    foot += "    print('A pressed and set')\n"
    foot += "    under = 'A'\n"
    foot += "\n"
    foot += "  elseif direction == 1 and button == 110 then\n"
    foot += "\n"
    foot += "    print('B pressed and set')\n"
    foot += "    under = 'B'\n"
    foot += "\n"
    foot += "  elseif direction == 1 and button == 13 then\n"
    foot += "\n"
    foot += "    print('C pressed and set')\n"
    foot += "    under = 'C'\n"
    foot += "\n"
    foot += "  end\n"
    foot += "\n"
    foot += "\n"
    foot += "  if direction == 1 and button ~= 32 and button ~= 110 and button ~= 13 then\n"
    foot += "\n"
    foot += "    if button == 9 then\n"
    foot += "\n"
    foot += "      print('Layout ' .. layouts[layout] .. ', was set.')\n"
    foot += "\n"
    foot += "      local file = io.open('C:/lhk/hotCode.txt', 'w')\n"
    foot += "      file:write(layouts[layout])\n"
    foot += "      file:flush()\n"
    foot += "      file:close()\n"
    foot += "\n"
    foot += "      lmc_send_keys('{F23}')\n"
    foot += "\n"
    foot += "    else\n"
    foot += "\n"
    foot += "      print('Under ' .. under .. ',  [' .. button .. '] = (' .. code[button] .. ') was pressed.')\n"
    foot += "\n"
    foot += "      local file = io.open('C:/lhk/hotCode.txt', 'w')\n"
    foot += "      file:write(layout..'_'..under..'_'..code[button])\n"
    foot += "      file:flush()\n"
    foot += "      file:close()\n"
    foot += "\n"
    foot += "      lmc_send_keys('{F24}')\n"
    foot += "\n"
    foot += "    end\n"
    foot += "\n"
    foot += "    under = '0'\n"
    foot += "\n"
    foot += "  end\n"
    foot += "\n"
    foot += "end)\n"
    return foot

def ahk_header(time, display_empty, display_code):
    head =  "#SingleInstance force\n"
    head += "SetTitleMatchMode, 2 ; look into any part of header\n"
    head += "SetTitleMatchMode, Fast\n"
    head += "#IfWinActive\n"
    head += "\n"
    head += " ; ! = ALT\n"
    head += " ; + = SHIFT\n"
    head += " ; ^ = CTRL\n"
    head += "\n"
    head += "~F23::\n"
    head += "  FileRead, layout, C:/lhk/hotCode.txt\n"
    head += "  ToolTip, Layout = %layout%, 60, 40\n"
    head += "  SetTimer, RemoveToolTip, -"+time+"\n"
    head += "Return\n"
    head += "\n"
    head += "~F24::\n"
    head += "  FileRead, code, C:/lhk/hotCode.txt\n"
    head += "\n"

    if(display_empty == "true" and display_code != "false"):
        head += "  ToolTip, %code%, 60, 40\n"
        head += "\n"
    
    head += "  Switch code\n"
    head += "  {\n\n"
    return head

def ahk_footer(time):
    foot =  "  }\n"
    foot += "\n"
    foot += "  SetTimer, RemoveToolTip, -"+time+"\n"
    foot += "\n"
    foot += "Return\n"
    foot += "\n"
    foot += "RemoveToolTip:\n"
    foot += "  ToolTip\n"
    foot += "Return\n"
    foot += "#IfWinActive\n"
    return foot
